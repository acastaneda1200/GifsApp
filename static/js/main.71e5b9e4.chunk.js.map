{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OAEQ,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC9CN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAI,WAAML,GAAN,uBAAAM,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUR,GAF7C,+DAGAS,MAAMF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAM,UAAEH,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATzB,kBAabM,GAba,4CAAJ,sDCEPO,EAAc,SAAC,GAAyB,EAAvBJ,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAErC,OACI,sBAAKG,UAAU,gDAAf,UACG,qBAAKC,IAAKJ,EAAQK,IAAKN,IACvB,4BAAIA,QCFFO,EAAU,SAAC,GAAiB,IAAhBxB,EAAe,EAAfA,UAAe,ECAZ,SAACA,GAAe,IAAD,EACbR,mBAAS,CAC/BoB,KAAK,GACLa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAcvC,OARAC,qBAAW,WACPvB,EAAQL,GAAW6B,MAAM,SAAAC,GACrBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACzB,IACG0B,EDXwBK,CAAa/B,GAAhCkB,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGpB,OACI,qCACI,6BAAKzB,IACJyB,GAAW,wCAChB,qBAAKJ,UAAU,YAAf,SAGUH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEhBhBgB,EAAe,WAAM,MAGMxC,mBAAS,CAAC,cAHhB,mBAGvByC,EAHuB,KAGX1C,EAHW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAED,6BAEK0C,EAAWnB,KAAK,SAAAd,GAAS,OACrB,cAAC,EAAD,CAEAA,UAAWA,GADNA,YCdzBkC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.71e5b9e4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias( (categoria) => [inputValue ,...categoria ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n       \r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n       \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs =  async(categoria) => {\r\n   \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria)}&limit=10&api_key=h1Mf9W0h3d35PBFvE09zOdXdf4DAH94B`;\r\n    const resp =  await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            images: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n \r\n    return gifs;\r\n   \r\n  \r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, images}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeftBig\">\r\n           <img src={images} alt={title}></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n  //  const [images, setImages] = useState([]);\r\n    \r\n    const {data:images, loading} = useFetchGifs(categoria);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n            {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n          \r\n              {\r\n                  images.map( (img)=> (\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {... img} />\r\n                  ))\r\n              }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( ()=> {\r\n        getGifs(categoria).then( imgs=> {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [categoria]) \r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Punch', 'SNK', 'Dragon ball']\r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategorias( (categoria) => [...categoria, 'HunterXhunter']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}/> \r\n            <hr/>\r\n           \r\n           <ol>\r\n               { \r\n                categorias.map( categoria => (\r\n                    <GifGrid \r\n                    key={categoria}\r\n                    categoria={categoria} />\r\n                ))\r\n               }\r\n           </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from \"./GifExpertApp\";\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}